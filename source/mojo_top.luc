module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    output spi_miso,        // AVR SPI MISO
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    output avr_rx,          // AVR RX (FPGA)
    
    
    
    
    
    
    
    
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    
    
    
    
    
    
    
    input button0[1],
    input button1[1],
    input button2[1],
    input button3[1],
    input button4[1],
    input button5[1],
    input button6[1],
    input level_reset[1],
    input game_reset[1],
    
    
    
    output led_strip,
    output led_strip_1
    
  ) {
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  sig rst;                  // reset signal
  .clk(clk) {
    reset_conditioner reset_cond;
    .rst(rst) {
      multi_seven_seg seg;
      display display;
      display display_1;
      control_logic control_logic;
    }
  }
  
  
  
  
  
  
  
  
  
  
  
  
  always {
    reset_cond.in = ~rst_n;   // input raw inverted reset signal
    rst = reset_cond.out;     // conditioned reset
    led = c{3b0, io_button};  // connect buttons to LEDs
    spi_miso = bz;            // not using SPI
    spi_channel = bzzzz;      // not using flags
    avr_rx = bz;              // not using serial port
    io_seg = ~seg.seg; // connect segments to the driver
    io_sel = ~seg.sel; // connect digit select to the
    io_led[2:0] = 3x{{8h00}};   // connect the DIP switches to the LEDs    driver
    seg.values[3:1] = {4h0, 4h0, 4h0}; seg.values[0] = control_logic.segs;

    
    
    
    
    
    
    
    
    
    
    
    

 // led display
    io_led[0][5:0] = control_logic.display;
    io_led[1][5:0] = control_logic.display_1;
    
    
    
    
    
    
    
    
    // connnecting control_logic
    control_logic.button0 = button0;
    control_logic.button1 = button1;
    control_logic.button2 = button2;
    control_logic.button3 = button3;
    control_logic.button4 = button4;
    control_logic.button5 = button5;
    control_logic.button6 = button6;
    control_logic.game_reset = game_reset;
    control_logic.level_reset = level_reset;
    
    
    
    
    
    // LED CONNECTION
    display.init[0][0] = 0;display.init[0][1] = 0;display.init[0][2] = 0;display.init[0][3] = 0;display.init[0][4] = 0;display.init[0][5] = 0;
    display.mask[0][0] = 0;display.mask[0][1] = 0;display.mask[0][2] = 0;display.mask[0][3] = 0;display.mask[0][4] = 0;display.mask[0][5] = 0;
    display_1.init[0][0] = 0;display_1.init[0][1] = 0;display_1.init[0][2] = 0;display_1.init[0][3] = 0;display_1.init[0][4] = 0;display_1.init[0][5] = 0;
    display_1.mask[0][0] = 0;display_1.mask[0][1] = 0;display_1.mask[0][2] = 0;display_1.mask[0][3] = 0;display_1.mask[0][4] = 0;display_1.mask[0][5] = 0;
    led_strip = display.out; led_strip_1 = display_1.out;
    
    if (control_logic.display[0] == 0) {
      display.data[0][0] = control_logic.display[0];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display.data[0][0] = control_logic.display[0]+control_logic.segs[2:0];
      } else {
        display.data[0][0] = control_logic.display[0]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display[1] == 0) {
      display.data[0][1] = control_logic.display[1];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display.data[0][1] = control_logic.display[1]+control_logic.segs[2:0];
      } else {
        display.data[0][1] = control_logic.display[1]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display[2] == 0) {
      display.data[0][2] = control_logic.display[2];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display.data[0][2] = control_logic.display[2]+control_logic.segs[2:0];
      } else {
        display.data[0][2] = control_logic.display[2]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display[3] == 0) {
      display.data[0][3] = control_logic.display[3];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display.data[0][3] = control_logic.display[3]+control_logic.segs[2:0];
      } else {
        display.data[0][3] = control_logic.display[3]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display[4] == 0) {
      display.data[0][4] = control_logic.display[4];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display.data[0][4] = control_logic.display[4]+control_logic.segs[2:0];
      } else {
        display.data[0][4] = control_logic.display[4]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display[5] == 0) {
      display.data[0][5] = control_logic.display[5];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display.data[0][5] = control_logic.display[5]+control_logic.segs[2:0];
      } else {
        display.data[0][5] = control_logic.display[5]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display_1[0] == 0) {
      display_1.data[0][0] = control_logic.display_1[0];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display_1.data[0][0] = control_logic.display_1[0]+control_logic.segs[2:0];
      } else {
        display_1.data[0][0] = control_logic.display_1[0]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display_1[1] == 0) {
      display_1.data[0][1] = control_logic.display_1[1];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display_1.data[0][1] = control_logic.display_1[1]+control_logic.segs[2:0];
      } else {
        display_1.data[0][1] = control_logic.display_1[1]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display_1[2] == 0) {
      display_1.data[0][2] = control_logic.display_1[2];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display_1.data[0][2] = control_logic.display_1[2]+control_logic.segs[2:0];
      } else {
        display_1.data[0][2] = control_logic.display_1[2]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display_1[3] == 0) {
      display_1.data[0][3] = control_logic.display_1[3];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display_1.data[0][3] = control_logic.display_1[3]+control_logic.segs[2:0];
      } else {
        display_1.data[0][3] = control_logic.display_1[3]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display_1[4] == 0) {
      display_1.data[0][4] = control_logic.display_1[4];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display_1.data[0][4] = control_logic.display_1[4]+control_logic.segs[2:0];
      } else {
        display_1.data[0][4] = control_logic.display_1[4]+control_logic.segs[2:0]-1;
      }
    }
    
    if (control_logic.display_1[5] == 0) {
      display_1.data[0][5] = control_logic.display_1[5];
    } else {
      if (control_logic.segs[2:0] == 0) {
        display_1.data[0][5] = control_logic.display_1[5]+control_logic.segs[2:0];
      } else {
        display_1.data[0][5] = control_logic.display_1[5]+control_logic.segs[2:0]-1;
      }
    }
  }
}
