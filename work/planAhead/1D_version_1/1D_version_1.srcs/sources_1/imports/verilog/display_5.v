/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

/*
   Parameters:
     ROW = 1
     COL = 6
*/
module display_5 (
    input clk,
    input rst,
    input [11:0] data,
    input [5:0] mask,
    input [11:0] init,
    output reg [0:0] out
  );
  
  localparam ROW = 1'h1;
  localparam COL = 3'h6;
  
  
  localparam LED_OFF = 1'h0;
  
  localparam LED_0 = 2'h2;
  
  localparam LED_1 = 2'h3;
  
  localparam LED_OFF_SELECTED = 3'h4;
  
  localparam LED_0_SELECTED = 3'h6;
  
  localparam LED_1_SELECTED = 3'h7;
  
  localparam NO_TOGGLE = 1'h1;
  
  localparam COLOR_BLACK = 24'h000000;
  
  localparam COLOR_RED = 24'h008010;
  
  localparam COLOR_GREEN = 24'h800010;
  
  localparam COLOR_SELECTED_BLACK = 24'h404040;
  
  localparam COLOR_SELECTED_RED = 24'h40ff40;
  
  localparam COLOR_SELECTED_GREEN = 24'hff4040;
  
  localparam COLOR_BLUE = 24'h0000ff;
  
  localparam COLOR_INIT_RED = 24'h00ff00;
  
  localparam COLOR_INIT_GREEN = 24'hff0000;
  
  reg [17:0] M_board_d, M_board_q = 1'h0;
  
  reg [13:0] M_counter_d, M_counter_q = 1'h0;
  
  reg [10:0] foo;
  
  reg [2:0] led_state;
  
  reg [23:0] grb;
  
  integer r;
  integer c;
  
  always @* begin
    M_counter_d = M_counter_q;
    M_board_d = M_board_q;
    
    out = 8'h00;
    for (r = 1'h0; r < 1'h1; r = r + 1) begin
      for (c = 1'h0; c < 3'h6; c = c + 1) begin
        M_board_d[(r)*18+(c)*3+2-:3] = {mask[(r)*6+(c)*1+0+0-:1], data[(r)*12+(c)*2+1-:2]};
      end
    end
    for (r = 1'h0; r < 1'h1; r = r + 1) begin
      if (M_counter_q < 16'h3000) begin
        c = M_counter_q / 12'h600;
        led_state = M_board_q[(r)*18+(c)*3+2-:3];
        
        case (led_state)
          1'h0: begin
            grb = 24'h000000;
          end
          2'h2: begin
            grb = 24'h008010;
          end
          2'h3: begin
            grb = 24'h800010;
          end
          3'h4: begin
            grb = 24'h404040;
          end
          3'h6: begin
            grb = 24'h40ff40;
          end
          3'h7: begin
            grb = 24'hff4040;
          end
          1'h1: begin
            grb = 24'h0000ff;
          end
          default: begin
            grb = 24'h000000;
          end
        endcase
        if (init[(r)*12+(c)*2+1-:2] != 2'h0) begin
          if (led_state == 2'h2) begin
            grb = 24'h00ff00;
          end else begin
            if (led_state == 2'h3) begin
              grb = 24'hff0000;
            end
          end
        end
        foo = M_counter_q - ((M_counter_q / 12'h600) * 12'h600);
        if (grb[(5'h17 - (foo >> 3'h6))*1+0-:1] == 1'h0) begin
          if (foo[0+5-:6] < 5'h14) begin
            out[(r)*1+0-:1] = 1'h1;
          end
        end else begin
          if (foo[0+5-:6] < 6'h28) begin
            out[(r)*1+0-:1] = 1'h1;
          end
        end
      end
      M_counter_d = M_counter_q + 1'h1;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_board_q <= 1'h0;
    end else begin
      M_board_q <= M_board_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_counter_q <= 1'h0;
    end else begin
      M_counter_q <= M_counter_d;
    end
  end
  
endmodule
